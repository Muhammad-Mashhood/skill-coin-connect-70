rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    match /users/{userId} {
      allow read: if true;
      allow write: if request.auth.uid == userId;
      
      match /privateData/{document=**} {
        allow read, write: if request.auth.uid == userId;
      }
    }
    
    match /courses/{courseId} {
      allow read: if true;
      allow create: if request.auth != null && 
                     request.resource.data.teacherId == request.auth.uid;
      allow update, delete: if request.auth != null && 
                              resource.data.teacherId == request.auth.uid;
    }
    
    match /purchases/{purchaseId} {
      allow read: if request.auth != null && 
                   (resource.data.studentId == request.auth.uid || 
                    resource.data.teacherId == request.auth.uid);
      allow create: if request.auth != null && 
                     request.resource.data.studentId == request.auth.uid;
    }
    
    match /bookings/{bookingId} {
      allow read: if request.auth != null && 
                   (resource.data.studentId == request.auth.uid || 
                    resource.data.teacherId == request.auth.uid);
      allow create: if request.auth != null && 
                     request.resource.data.studentId == request.auth.uid;
      allow update: if request.auth != null && 
                     (resource.data.studentId == request.auth.uid || 
                      resource.data.teacherId == request.auth.uid);
    }
    
    match /reviews/{reviewId} {
      allow read: if true;
      allow create: if request.auth != null && 
                     request.resource.data.studentId == request.auth.uid;
      allow update, delete: if request.auth != null && 
                             resource.data.studentId == request.auth.uid;
    }
    
    match /follows/{followId} {
      allow read: if true;
      allow create: if request.auth != null && 
                     request.resource.data.studentId == request.auth.uid;
      allow delete: if request.auth != null && 
                     resource.data.studentId == request.auth.uid;
    }
  }
}

service firebase.storage {
  match /b/{bucket}/o {
    match /courses/{courseId}/{fileName} {
      allow read: if request.auth != null && 
        exists(/databases/$(database)/documents/purchases/$(request.auth.uid + '_' + courseId));
      allow write: if request.auth != null && 
        exists(/databases/$(database)/documents/courses/$(courseId)) &&
        request.resource.size < 100 * 1024 * 1024 && // 100MB limit
        (fileName.matches('.*\\.(mp4|webm)$')); // Only allow MP4 and WebM
    }
    
    match /profileImages/{userId} {
      allow read: if true;
      allow write: if request.auth != null && request.auth.uid == userId;
    }
  }
}